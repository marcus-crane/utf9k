#+title: Emacs
#+date: 2020-08-18
#+tags[]: emacs lisp faq

* How can I compile Emacs from scratch?

#+begin_src shell
git clone -b emacs-27 git://git.sv.gnu.org/emacs.git
cd emacs
sudo apt-get build-dep emacs
./autogen.sh
./configure --with-x-toolkit=lucid --with-mailutils
make -j4
./src/emacs // test that it's working
sudo make install
#+end_src

* Why do some functions have double dashes?

As an example of what I mean, ~org-roam~ had seemingly the same function names at one point, despite the only difference being some double dashes

[[https://github.com/org-roam/org-roam/blob/ba835ef6242caf23e60ab9de1aaf1f25d7e5841f/org-roam-capture.el#L236][Here is an example of what I mean]]

At first glance, the naming differences between ~org-roam-capture--get-point~ and ~org-roam--capture-get-point~ seems completely arbitrary

Supposedly, since there is no such thing as internal vs external functions, it's a convention for declaring that a function should be considered private or internal only

https://emacs.stackexchange.com/questions/42286/double-hyphen-in-elisp-function-names

I still don't understand the above example since they both have double hyphens

* Why do some lists start with a backtick (~`~) instead of a comma (~'~)

Lists that start with a ~`~ end up having values interpolated.

Compare the following two examples:

#+begin_src emacs-lisp
'(,(concat "Hello, " "World"), "Nice to meet you?")
; (,(concat "Hello, " "World")
;   ,"Nice to meet you?")
#+end_src

As you can see, we got the exact same list that we defined when starting with a ~'~

How about using a ~`~?

#+begin_src emacs-lisp
`(,(concat "Hello, " "World"), "Nice to meet you?")
; ("Hello, World" "Nice to meet you?")
#+end_src

The ~concat~ expression is evaluated and we get back two strings!

* How can I find out what places Emacs is checking for my passwords?

#+begin_src emacs-lisp
auth-sources
(password-store "~/.authinfo.gpg")
#+end_src
