#+title: macOS
#+date: 2020-09-09
#+tags[]: macos os cheatsheet

{{< toc >}}

* How can I view configured networks in my terminal?

Let's assume you have multiple networks set up under ~System Preferences > Networks~.

You might have "Work" which has a bunch of proxy configuration specified and "Home" which just disabled proxy configuration.

If you left the former "Work" network selected, then went to a place that can't access the proxy server, you wouldn't be able to access the internet and vice versa.

To make automating this a little bit easier, there's a command line tool called ~scselect~

Here's an example of what it looks like in action:

#+begin_src bash
> scselect
Defined sets include: (* == current set)
 * <guid> (Work)
   <guid> (Home)
#+end_src

In this example, we can see the ~Work~ network is selected.

Now we wanted to change to the Home network, you could do so manually in ~System Preferences~ or you can run ~scselect~ with the name of the network you want to change to like so:

#+begin_src bash
> scselect Home
CurrentSet updated to <guid> (Home)
> scselect
Defined sets include: (* == current set)
   <guid> (Work)
 * <guid> (Home)
#+end_src

As you can see, the ~Home~ network is now selected.

I only recently discovered this tool so I haven't automated it yet but it's probably feasible to have a file with your working hours and then if it's within those hours, toggle on the ~Work~ network (and all of the proxy configuration that comes with it)

The reason you might want to use a schedule and not eg; WiFi name is that you might be working from home over a VPN for example.
* How can I run a Homebrew application being blocked by Gatekeeper?

This issue is particularly annoying and I only just discovered it today for the first time.

Here's an example of what it looks like

[pic]

In order to install the application so that it bypasses Gatekeeper, you can rerun ~brew cask install~ like so:

#+begin_src shell
> brew cask install --no-quarantine blah
> brew reinstall --no-quarantine blah
#+end_src

If you'd like to keep this flag enabled all the time, and honestly you might as well, you can also do the following:

#+begin_src shell
> export HOMEBREW_CASK_OPTS="--no-quarantine"
> brew cask install blah
#+end_src
