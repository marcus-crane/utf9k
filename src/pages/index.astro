---
import BaseLayout from "../layouts/Base.astro";
import Nav from "../components/Nav.astro"

import type { BookList } from "../schemas/books"
import type { GameList } from "../schemas/games";

// Data files
import books from "../data/books.yml";
import gags from "../data/gags.yml";
import games from "../data/games.yml";
import manga from "../data/manga.json";

import { getCollection } from 'astro:content';

import WriteFile from "../components/WriteFile.astro"
import RssXml from '../components/RssXml.astro';

const blogPosts = await getCollection("blog", ({ data }) => {
  return data.draft !== true
});

// MDX RSS hack taken from https://github.com/kogakure/website-astro-stefanimhoff.de/blob/8ecf5b3644dee879a3d344a8de08c5ad0be895cf/src/pages/index.astro#L14
// who adapted it from https://scottwillsey.com/rss-pt2/

const isProduction = process.env.NODE_ENV === 'production'
---

<BaseLayout bodystyle="overflow-x: hidden;">
  <div id="sun"></div>
  <Nav />
  <div id="content">
    <article class="full">
      <div id="home-wrapper">
        <div id="welcome-message">
          <center>
            <header>
              <h1>Welcome!</h1>
            </header>
            <p>
              My name is <a href="/about/">Marcus Crane</a> and you're currently
              logged on to my personal website.
            </p>
            <p>
              I maintain a <a href="/blog/">blog</a> and also keep a running list
              of <a href="/questions/">questions</a> regarding topics I often want
              to remember things about for later.
            </p>
            <p>
              There's also a <a href="/now/">now</a> page for, realistically, what
              I was up to two weeks ago and a <a href="/projects/">projects</a>
              page documenting my small experiments.
            </p>
            <p>
              Finally, if you have any questions or just want to drop a comment,
              you can pick your poison down in the bottom right of the footer.
            </p>
          </center>
          <hr />
          <center>
            <header>
              <h3>Here's a random(ly generated) thought</h3>
            </header>
            <p>{gags[Math.floor(Math.random() * gags.length)]}</p>
          </center>
          <hr />
          <div class="post-stream">
            <center>
              <header>
                <h3>
                  <a href="/books/">Books I'm *ahem* paging through</a>
                </h3>
              </header>
              <ul>
                {
                  (books as BookList[])[0].books
                    .filter((b) => b.progress !== 100)
                    .map((book) => (
                      <li style="display: inline-block;">
                        <img
                          alt={`A cover image of the book titled ${book.title}`}
                          src={book.cover}
                          height="180px"
                          style="border-radius: 3px;"
                        />
                        <figcaption style="display: none;">You can learn more by visiting <a target="_blank" href={book.link}>OpenLibrary</a></figcaption>
                        <p>{book.progress}% read</p>
                      </li>
                    ))
                }
              </ul>
            </center>
          </div>
          <hr />
          <div class="post-stream">
            <center>
              <header>
                <h3>Manga I'm actively churning through</h3>
              </header>
              <ul>
                {
                  manga
                    .filter((m) => m.chapters !== null)
                    .map((manga) => (
                      <li style="display: inline-block;">
                        <img
                          alt={`A cover image of ${manga.title}, a manga series by ${manga.author}`}
                          src={manga.cover}
                          height="180px"
                          style="border-radius: 3px;"
                        />
                        <figcaption style="display: none;">You can learn more by visiting <a target="_blank" href={manga.url}>Anilist</a></figcaption>
                        <p>{manga.chapters! - manga.progress} chapters left</p>
                      </li>
                    ))
                }
              </ul>
            </center>
          </div>
        </div>
        <div id="recent-updates">
          <div id="liveplayer">
            <!-- Curious how my live player works? The unminified source code lives at https://github.com/marcus-crane/utf9k/blob/main/assets/js/live-player.js -->
            <h3 id="action">üòµ‚Äçüí´ This widget should have loaded by now!</h3>
            <div>
              <div id="rotating-border" class="rotating-border-hidden">
                <img
                  src="/placeholder.png"
                  id="cover"
                  alt="A grey placeholder cover that is just taking up space until the real cover art is loaded"
                />
              </div>
            </div>
            <strong id="title">Fingers Crossed</strong>
            <br />
            <i id="subtitle">It should update if things aren't broken</i>
            <br />
            <div id="progress">
              <i id="elapsed">00:00</i> / <i id="duration">59:59</i>
            </div>
          </div>
          <div class="player-history">
            <p>Previously</p>
            <ul id="played-items"></ul>
          </div>
          <hr />
          <div class="post-stream">
            <h3>Recently updated pages</h3>
            <ul>
              {
                blogPosts
                  .sort((a, b) => (a.data.date > b.data.date ? 1 : a < b ? -1 : 0))
                  .reverse()
                  .slice(0, 6)
                  .map(p => <li><a href={`/blog/${p.slug}`}>{p.data.title}</a></li>)
              }
            </ul>
          </div>
          <hr />
          <center>
            <div class="post-stream">
              <header>
                <h3>
                  <a href="/games/">Games I'm (slowly) progressing through</a>
                </h3>
              </header>
              <ul>
                {
                  (games as GameList[])[0].games.map((game) => (
                    <li style="display: inline-block;">
                      <img
                        alt={`Box art for the game titled ${game.title}`}
                        src={game.cover}
                        height="180px"
                        style="border-radius: 3px;"
                      />
                      <figcaption style="display: none;">You can learn more by visiting <a target="_blank" href={game.link}>IGDB</a></figcaption>
                    </li>
                  ))
                }
              </ul>
            </div>
          </center>
          <hr />
        </div>
      </div>
    </article>
    <script>
      import "../js/live-player";
    </script>
  </div>
</BaseLayout>

{/* TODO: Try to render a static instance of RssXml locally */}
{isProduction && (
<WriteFile slot="rss-writer">
  <RssXml slot="rss-writer" />
</WriteFile>
)}