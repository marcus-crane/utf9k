<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>utf9k</title>
    <link>https://utf9k.net/tags/arch/</link>
    <description>Posts from utf9k</description>
    <language>en</language>
    <author>
      <name>Marcus Crane</name>
      <email>marcus@utf9k.net</email>
    </author>
    <lastBuildDate>Sun, 24 Dec 2017 00:00:00 +1300</lastBuildDate>
    
	<atom:link href="https://utf9k.net/tags/arch/rss.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Installing Arch Linux on my Intel NUC</title>
      <link>https://utf9k.net/blog/arch-nuc-install/</link>
      <description>My self help guide to installing Arch</description>
      <pubDate>Sun, 24 Dec 2017 00:00:00 +1300</pubDate>
      <author><name>Marcus Crane</name></author>
      <guid>https://utf9k.net/blog/arch-nuc-install/</guid>
      <content type="html">&lt;div class=&#34;notice&#34;&gt;
  &lt;hr class=&#34;hidden&#34; /&gt;
  &lt;h3&gt;
  ⚰️ Is this up to date?&lt;/h3&gt;
&lt;p&gt;While I used to fiddle with Arch, and other Linux distros when I was younger, I don&amp;rsquo;t run it as my daily driver nowadays.&lt;/p&gt;
&lt;p&gt;If I were to reinstall Arch Linux tomorrow, I would still dogfood my own guide and expect that it should be fairly seemless.&lt;/p&gt;
&lt;p&gt;While I don&amp;rsquo;t expect much has changed, you should know that I&amp;rsquo;m not actively verifying that these steps haven&amp;rsquo;t changed or anything like that.&lt;/p&gt;
  &lt;hr class=&#34;hidden&#34; /&gt;
&lt;/div&gt;
&lt;p&gt;It&amp;rsquo;s that time again where I decide to reinstall Arch Linux and likely end up bashing my head against a wall. I have an old blog post on my Github but it could be better so this is an extended version mainly for my own future reference.&lt;/p&gt;
&lt;p&gt;Please note that this isn&amp;rsquo;t some guide for pros or that I expect to have the most 100% correct or efficient method of installing. It&amp;rsquo;s just what I know works for me.&lt;/p&gt;

&lt;h2 id=&#34;getting-online&#34;&gt;Getting online&lt;/h2&gt;&lt;p&gt;As I&amp;rsquo;m installing on an Intel NUC, I&amp;rsquo;m going to assume you might like it run it mainly via WiFi so we&amp;rsquo;ll start by getting online. You can do this graphically by running &lt;code&gt;wifi-menu&lt;/code&gt;.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;wifi-menu
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Once you&amp;rsquo;ve set up a profile, you&amp;rsquo;ll see a new entry when using the &lt;code&gt;ifconfig&lt;/code&gt; command and you can confirm you&amp;rsquo;re online with &lt;code&gt;ping archlinux.org -c 3&lt;/code&gt;.&lt;/p&gt;

&lt;h2 id=&#34;setting-up-your-hard-drive&#34;&gt;Setting up your hard drive&lt;/h2&gt;&lt;p&gt;Personally, I wouldn&amp;rsquo;t, and probably couldn&amp;rsquo;t (yet) install Arch Linux as a dual boot partition. That is, alongside another operating system such as Windows or macOS. You might like to and that&amp;rsquo;s great but this isn&amp;rsquo;t the guide for you :)&lt;/p&gt;
&lt;p&gt;First, we need to see what our current devices are:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;fdisk -l
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;You may see a few. In my case, my hard drive has a few &lt;code&gt;/dev/sda&amp;lt;number&amp;gt;&lt;/code&gt; entries and my USB has 2 &lt;code&gt;/dev/sdb&amp;lt;number&amp;gt;&lt;/code&gt; entries. For the purposes of this guide, I&amp;rsquo;ll be assuming that your hard drive is under &lt;code&gt;/dev/sda&lt;/code&gt; but when installing to, say, a Macbook, I&amp;rsquo;ve found that the hard drive can be under &lt;code&gt;/dev/sdb&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;My hard drive will end up looking as follows once I&amp;rsquo;ve set it up:&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;SIZE&lt;/th&gt;
&lt;th&gt;PURPOSE&lt;/th&gt;
&lt;th&gt;LOCATION&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;500M&lt;/td&gt;
&lt;td&gt;Boot Sector&lt;/td&gt;
&lt;td&gt;/boot&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;20G&lt;/td&gt;
&lt;td&gt;System Root&lt;/td&gt;
&lt;td&gt;/&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;8G&lt;/td&gt;
&lt;td&gt;Swap Space&lt;/td&gt;
&lt;td&gt;N/A&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;437G&lt;/td&gt;
&lt;td&gt;Home Directory&lt;/td&gt;
&lt;td&gt;/home&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;I&amp;rsquo;m targeting a &lt;a href=&#34;https://en.wikipedia.org/wiki/Unified_Extensible_Firmware_Interface&#34;&gt;UEFI&lt;/a&gt; BIOS so we&amp;rsquo;ll be using &lt;a href=&#34;https://en.wikipedia.org/wiki/GUID_Partition_Table&#34;&gt;GPT&lt;/a&gt; for our partition table.&lt;/p&gt;
&lt;p&gt;The following uses &lt;a href=&#34;https://www.gnu.org/software/parted/manual/parted.html&#34;&gt;gparted&lt;/a&gt; which you may or may not be familiar with if you&amp;rsquo;ve only use GUI installers before. Just follow along and I&amp;rsquo;ll comment what each segment is roughly doing. From hereon in, URLs prefixed by a tilde (~) indicate resources where you can read further information if you&amp;rsquo;re the curious sort.&lt;/p&gt;
&lt;div class=&#34;notice&#34;&gt;
  &lt;hr class=&#34;hidden&#34; /&gt;
  &lt;h3&gt;
  &lt;span&gt;⚠️&lt;/span&gt;Consider yourself warned&lt;/h3&gt;
&lt;p&gt;The following &lt;em&gt;WILL&lt;/em&gt; wipe your hard drive so ensure that this is what you&amp;rsquo;d like to do and/or that you&amp;rsquo;ve backed up everything from any currently installed OS&lt;/p&gt;
  &lt;hr class=&#34;hidden&#34; /&gt;
&lt;/div&gt;

&lt;h2 id=&#34;partitioning&#34;&gt;Partitioning&lt;/h2&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#6272a4&#34;&gt;# Launched parted, passing our hard drive as an argument&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;parted /dev/sda
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#6272a4&#34;&gt;# Create a partition table using the GUID Partition Table (GPT) format.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#6272a4&#34;&gt;# This wipes your drive(!)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;mklabel gpt
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#6272a4&#34;&gt;# Create a 499M boot sector that will live at /boot&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#6272a4&#34;&gt;# ESP is short for EFI System Partition and are always formatted as FAT32&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#6272a4&#34;&gt;# We start at 1MiB instead of 0 because MBR/GPT both use the first block&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#6272a4&#34;&gt;# ~ https://unix.stackexchange.com/a/286325&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#6272a4&#34;&gt;# We use 550MiB as Rod Smith reports possible bugs with ESPs below 512MiB&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#6272a4&#34;&gt;# ~ http://www.rodsbooks.com/efi-bootloaders/principles.html&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;mkpart ESP fat32 1MiB 551MiB
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#6272a4&#34;&gt;# Set the boot flag to ON on partition number 1&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#6272a4&#34;&gt;# ~ https://www.gnu.org/software/parted/manual/html_node/set.html&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#8be9fd;font-style:italic&#34;&gt;set&lt;/span&gt; &lt;span style=&#34;color:#bd93f9&#34;&gt;1&lt;/span&gt; boot on
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#6272a4&#34;&gt;# Create a 20G ext4 partition that will live at /&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;mkpart primary ext4 551MiB 20.5GiB
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#6272a4&#34;&gt;# Create an 8G swap partition&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;mkpart primary linux-swap 20.5GiB 28.5GiB
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#6272a4&#34;&gt;# Allocate the remaining space which will be used by users at /home/{user}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;mkpart primary 28.5GiB 100%
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#6272a4&#34;&gt;# All done!&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;quit
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Now that are partitions are set up, running &lt;code&gt;fdisk -l&lt;/code&gt; again should show the following:&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;DEVICE&lt;/th&gt;
&lt;th&gt;FORMAT&lt;/th&gt;
&lt;th&gt;LOCATION&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;/dev/sda1&lt;/td&gt;
&lt;td&gt;ESP&lt;/td&gt;
&lt;td&gt;/boot&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;/dev/sda2&lt;/td&gt;
&lt;td&gt;ext4&lt;/td&gt;
&lt;td&gt;/&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;/dev/sda4&lt;/td&gt;
&lt;td&gt;ext4&lt;/td&gt;
&lt;td&gt;/home&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

&lt;h2 id=&#34;making-file-systems&#34;&gt;Making file systems&lt;/h2&gt;&lt;p&gt;We don&amp;rsquo;t need any utilites to create our file systems, we can just do &amp;rsquo;em straight outta the box like so:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#6272a4&#34;&gt;# Create a 32bit VFAT filesystem for our boot partition&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#6272a4&#34;&gt;# VFAT is essentially FAT32 with support for longer filenames. See below for more details.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#6272a4&#34;&gt;# ~ http://wiki.linuxquestions.org/wiki/VFAT&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#6272a4&#34;&gt;# ~ https://unix.stackexchange.com/a/263731&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;mkfs.vfat -F32 /dev/sda1
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#6272a4&#34;&gt;# Create an ext4 filesystem for our root partition&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;mkfs.ext4 /dev/sda2
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#6272a4&#34;&gt;# Prepare a swap area&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;mkswap /dev/sda3
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#6272a4&#34;&gt;# Activate our created swap area&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;swapon /dev/sda3
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#6272a4&#34;&gt;# Create an ext4 filesystem for our home partition&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;mkfs.ext4 /dev/sda4
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Now that our hard drive is completely set up, we&amp;rsquo;re ready to mount our file systems.&lt;/p&gt;

&lt;h2 id=&#34;mounting-our-new-file-systems&#34;&gt;Mounting our new file systems&lt;/h2&gt;&lt;p&gt;Just as a reminder, here&amp;rsquo;s where we want our partitions to end up&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;DEVICE&lt;/th&gt;
&lt;th&gt;FORMAT&lt;/th&gt;
&lt;th&gt;LOCATION&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;/dev/sda1&lt;/td&gt;
&lt;td&gt;ESP&lt;/td&gt;
&lt;td&gt;/boot&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;/dev/sda2&lt;/td&gt;
&lt;td&gt;ext4&lt;/td&gt;
&lt;td&gt;/&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;/dev/sda4&lt;/td&gt;
&lt;td&gt;ext4&lt;/td&gt;
&lt;td&gt;/home&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;Here&amp;rsquo;s how this layout translates into mount commands:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#6272a4&#34;&gt;# Mount our root partition to /mnt&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#6272a4&#34;&gt;# NOTE: /mnt doesn&amp;#39;t persist once we&amp;#39;re in our bash prompt&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#6272a4&#34;&gt;# For example, /mnt/home becomes just /home&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;mount /dev/sda2 /mnt
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#6272a4&#34;&gt;# Create a folder which our ESP partition will be mounted to&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;mkdir /mnt/boot
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#6272a4&#34;&gt;# Mount our ESP partition to /boot&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;mount /dev/sda1 /mnt/boot
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#6272a4&#34;&gt;# Create a home folder where all of our user directories will live&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;mkdir /mnt/home
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#6272a4&#34;&gt;# Mount the home partition to /home&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;mount /dev/sda4 /mnt/home
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Nice! We&amp;rsquo;re completely done and can start to actually install and configure Arch Linux.&lt;/p&gt;

&lt;h2 id=&#34;installing-base-packages&#34;&gt;Installing base packages&lt;/h2&gt;&lt;p&gt;Now we need to download and install the base packages for Arch Linux to our &lt;code&gt;/mnt&lt;/code&gt; which will becomes our root (&lt;code&gt;/&lt;/code&gt;) later on.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;pacstrap /mnt base
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;For the curious, the &lt;code&gt;base&lt;/code&gt; group contains a number of default libraries and utilties you may have used such as &lt;code&gt;man&lt;/code&gt;, &lt;code&gt;openssl&lt;/code&gt;, &lt;code&gt;bash&lt;/code&gt;, &lt;code&gt;iptables&lt;/code&gt; and &lt;code&gt;gcc&lt;/code&gt; to name a few.&lt;/p&gt;
&lt;p&gt;You can view the &lt;code&gt;pacstrap&lt;/code&gt; script itself &lt;a href=&#34;https://git.archlinux.org/arch-install-scripts.git/tree/pacstrap.in&#34;&gt;here&lt;/a&gt;. I thought it would be quite longer!&lt;/p&gt;
&lt;p&gt;The script also runs the &lt;code&gt;mkinitcpio&lt;/code&gt; bash script which you can learn more about &lt;a href=&#34;https://wiki.archlinux.org/index.php/mkinitcpio#Overview&#34;&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;This entire process may take a few minutes so feel free to read ahead while you wait.&lt;/p&gt;

&lt;h2 id=&#34;set-up-bash&#34;&gt;Set up bash&lt;/h2&gt;&lt;p&gt;With Arch Linux installed, we can finally move off of our live USB and start a bash process to set up our freshly initialised system after 2 more quick steps&lt;/p&gt;
&lt;p&gt;Step 1 is generating a &lt;a href=&#34;http://www.linfo.org/etc_fstab.html&#34;&gt;file systems table&lt;/a&gt;, referred to as &lt;code&gt;fstab&lt;/code&gt; going forward. This is done so that all devices (/dev/sdaX) specificied in the file are mounted automatically on startup.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;genfstab -U /mnt &amp;gt;&amp;gt; /mnt/etc/fstab
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;The &lt;code&gt;-U&lt;/code&gt; flag denotes that we want to identify our devices using &lt;a href=&#34;https://en.wikipedia.org/wiki/Universally_unique_identifier&#34;&gt;UUIDs&lt;/a&gt;, instead of labels, as noted &lt;a href=&#34;https://github.com/falconindy/arch-install-scripts/blob/master/genfstab.in#L86&#34;&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Step 2 is even quicker!&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;arch-chroot /mnt
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;code&gt;arch-chroot&lt;/code&gt;, seen &lt;a href=&#34;https://github.com/falconindy/arch-install-scripts/blob/master/arch-chroot.in&#34;&gt;here&lt;/a&gt; changes the root directory to, well, &lt;code&gt;/&lt;/code&gt; which is our new root directory. As we&amp;rsquo;re still on the live USB, we specify it as &lt;code&gt;/mnt&lt;/code&gt; instead.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;arch-chroot&lt;/code&gt; is also able to take some flags following the root partition such as &lt;code&gt;arch-chroot /mnt /bin/bash&lt;/code&gt;. It&amp;rsquo;s worth noting that the preceeding example is actually fairly pointless seeing as &lt;code&gt;arch-chroot&lt;/code&gt; already defaults to &lt;code&gt;bash&lt;/code&gt; anyway.&lt;/p&gt;
&lt;p&gt;Huzzah! We&amp;rsquo;re finally in our new system but will it boot? Not quite yet and we&amp;rsquo;ve still a lot to set up so let&amp;rsquo;s carry on.&lt;/p&gt;

&lt;h2 id=&#34;updates-and-other-dependencies-optional&#34;&gt;Updates and other dependencies (optional)&lt;/h2&gt;&lt;p&gt;At this point, I like to run a system upgrade using &lt;code&gt;pacman -Syu&lt;/code&gt; just in case. As we&amp;rsquo;ve just pulled our dependencies minutes ago, it&amp;rsquo;ll likely find nothing but I reckon it feels good, haha.&lt;/p&gt;
&lt;p&gt;I also need some extra bits and pieces for later at this point. We couldn&amp;rsquo;t have fetched these earlier as trying to run &lt;code&gt;pacman&lt;/code&gt;, the Arch Linux package manager, from the live USB would attempt to install to the USB itself and error out.&lt;/p&gt;
&lt;p&gt;I need the following bits:&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;PACKAGE&lt;/th&gt;
&lt;th&gt;PURPOSE&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;http://invisible-island.net/dialog/&#34;&gt;dialog&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;A library for console-based UIs like &lt;code&gt;wifi-menu&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;https://downloadcenter.intel.com/search?keyword=microcode+data&#34;&gt;intel-ucode&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Micro-code updates for Intel CPUs&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;https://w1.fi/wpa_supplicant/&#34;&gt;wpa_supplicant&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Used to connect to wireless networks (put simply)&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;That should be everything for now. The other bits (&lt;code&gt;netctl&lt;/code&gt; and &lt;code&gt;dhcpcd&lt;/code&gt;) were already installed as part of the &lt;code&gt;base&lt;/code&gt; group from earlier. If you&amp;rsquo;re using Ethernet, you can basically skip this entire step hence why it&amp;rsquo;s marked as optional.&lt;/p&gt;
&lt;p&gt;Honestly, we don&amp;rsquo;t really need &lt;code&gt;dialog&lt;/code&gt; as we could just use &lt;code&gt;netctl&lt;/code&gt; directly but I find it more user friendly and I&amp;rsquo;m not a masochist, haha.&lt;/p&gt;
&lt;p&gt;You might as well also enable &lt;code&gt;dhcpcd&lt;/code&gt; if you need it for ethernet with &lt;code&gt;systemctl enable dhcpcd&lt;/code&gt;.&lt;/p&gt;

&lt;h2 id=&#34;generating-locale&#34;&gt;Generating locale&lt;/h2&gt;&lt;p&gt;Popular software often ships in a number of languages but in order to show the correct language, currency and so on, it needs to know where you live. We achieve this by generating and setting a locale.&lt;/p&gt;
&lt;p&gt;To do so, edit &lt;code&gt;/etc/locale.gen&lt;/code&gt; and uncomment your respective locale. In short, the format is &lt;code&gt;{language}_{country code}.{character encoding}&lt;/code&gt;. As an example, I&amp;rsquo;m in New Zealand so I uncomment the line &lt;code&gt;en_NZ.UTF-8 UTF-8&lt;/code&gt;. If in doubt, just opt for &lt;code&gt;utf-8&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;I just use &lt;code&gt;nano&lt;/code&gt; but if you prefer, this would be an alright time to run &lt;code&gt;pacman -S vim&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Once you&amp;rsquo;ve done that, you&amp;rsquo;ll need to generate the locale files and export your language to your environment&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;locale-gen
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#8be9fd;font-style:italic&#34;&gt;export&lt;/span&gt; &lt;span style=&#34;color:#8be9fd;font-style:italic&#34;&gt;LANG&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;={&lt;/span&gt;xx&lt;span style=&#34;color:#ff79c6&#34;&gt;}&lt;/span&gt;_&lt;span style=&#34;color:#ff79c6&#34;&gt;{&lt;/span&gt;yy&lt;span style=&#34;color:#ff79c6&#34;&gt;}&lt;/span&gt;.UTF-8
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;If done successfully, &lt;code&gt;echo $LANG&lt;/code&gt; will display your locale.&lt;/p&gt;
&lt;p&gt;For reference, the actual &lt;code&gt;locale-gen&lt;/code&gt; script can be seen &lt;a href=&#34;https://sourceware.org/git/?p=glibc.git;a=blob;f=localedata/gen-locale.sh;h=39f1475cbc45faaae32728dbfd7cce282c3cdb05;hb=HEAD&#34;&gt;here&lt;/a&gt; as part of &lt;a href=&#34;https://sourceware.org/git/?p=glibc.git;a=summary&#34;&gt;glibc&lt;/a&gt;, the GNU implementation of the C standard library. I always wondered where it was from!&lt;/p&gt;

&lt;h2 id=&#34;timezone&#34;&gt;Timezone&lt;/h2&gt;&lt;p&gt;Selecting our timezone is fairly straightforward thanks to an interactive program called &lt;code&gt;tzselect&lt;/code&gt;. Running it will show a list of continents and oceans. Selecting one will drill down to display countries.&lt;/p&gt;
&lt;p&gt;Once you&amp;rsquo;ve confirmed the output, it will mention appending the timezone to a file. Instead, we want to symlink that timezone to a file. In my case, the timezone is &lt;code&gt;Pacific/Auckland&lt;/code&gt; but of course, you&amp;rsquo;ll want to input your respective timezone instead.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;ln -s /usr/share/zoneinfo/Pacific/Auckland /etc/localtime
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2 id=&#34;setting-hardware-clock&#34;&gt;Setting hardware clock&lt;/h2&gt;&lt;p&gt;The last of our locale related setups is configuring the system clock. To do that, we&amp;rsquo;ll tell our hardware clock to set the system time using the &lt;code&gt;--hctosys&lt;/code&gt; option. You can read more about &lt;code&gt;hwclock&lt;/code&gt; and how it differs from system time &lt;a href=&#34;https://linux.die.net/man/8/hwclock&#34;&gt;here&lt;/a&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;hwclock --systohc
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2 id=&#34;hostname-setup&#34;&gt;Hostname setup&lt;/h2&gt;&lt;p&gt;We like life to be simple (but no simpler) and giving our computer/server a unique name is an important part of that process. For this bit, let&amp;rsquo;s assume we want to name our system &lt;code&gt;weinerdog&lt;/code&gt; because it sounds silly.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#8be9fd;font-style:italic&#34;&gt;echo&lt;/span&gt; weinerdog &amp;gt; /etc/hostname
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Oh, that was easy. We also need to tell our system that &lt;code&gt;weinerdog&lt;/code&gt; is an alias for &lt;code&gt;127.0.0.1&lt;/code&gt;, just like &lt;code&gt;localhost&lt;/code&gt; is. We could fire up our favourite editor but it&amp;rsquo;s likely &lt;code&gt;/etc/hosts&lt;/code&gt; is empty so just do the following:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#8be9fd;font-style:italic&#34;&gt;echo&lt;/span&gt; 127.0.0.1 localhost weinerdog &amp;gt; /etc/hosts
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;How quick was that, huh?&lt;/p&gt;

&lt;h2 id=&#34;set-a-root-password&#34;&gt;Set a root password&lt;/h2&gt;&lt;p&gt;We&amp;rsquo;ll be using this password to login, which I sometimes forget. It should be different than the password for the user account we&amp;rsquo;ll be making soon but I&amp;rsquo;d be lying if I said I have a super secure password. You have bigger problems if you think this writeup will give you top notch security anyway. I&amp;rsquo;m just here for a usable system!&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;passwd
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Just type in your password twice. Not much more to it than that.&lt;/p&gt;

&lt;h2 id=&#34;installing-a-boot-manager&#34;&gt;Installing a boot manager&lt;/h2&gt;&lt;p&gt;We&amp;rsquo;ll be using &lt;code&gt;systemd-boot&lt;/code&gt; as our EFI boot manager. I couldn&amp;rsquo;t tell you anything about it other than it works and that&amp;rsquo;s good enough.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;bootctl --path&lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt;/boot install
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;The above command copies the &lt;code&gt;systemd-boot&lt;/code&gt; binary to our EFI System Partition (&lt;code&gt;/boot&lt;/code&gt;) and adds it as the default EFI application to be loaded as stated &lt;a href=&#34;https://wiki.archlinux.org/index.php/systemd-boot#EFI_boot&#34;&gt;here&lt;/a&gt;.&lt;/p&gt;

&lt;h2 id=&#34;configuring-the-boot-manager&#34;&gt;Configuring the boot manager&lt;/h2&gt;&lt;p&gt;Now that we have a boot manager, we need to tell it what to boot exactly. We&amp;rsquo;ll create a new &lt;code&gt;arch.conf&lt;/code&gt; entry using &lt;code&gt;nano&lt;/code&gt;:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;nano /boot/loader/entries/arch.conf
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;and enter the following&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;title Arch Linux
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;linux /vmlinuz-linux
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;initrd /intel-ucode.img
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;initrd /initramfs-linux.img
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;options &lt;span style=&#34;color:#8be9fd;font-style:italic&#34;&gt;root&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt;/dev/sda2 rw &lt;span style=&#34;color:#8be9fd;font-style:italic&#34;&gt;elevator&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt;deadline quiet splash &lt;span style=&#34;color:#8be9fd;font-style:italic&#34;&gt;resume&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt;/dev/sda3 &lt;span style=&#34;color:#8be9fd;font-style:italic&#34;&gt;nmi_watchdog&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#bd93f9&#34;&gt;0&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;NOTE&lt;/strong&gt;: The line &lt;code&gt;initrd /intel-ucode.img&lt;/code&gt; &lt;strong&gt;ONLY&lt;/strong&gt; applies if you installed the &lt;code&gt;intel-ucode&lt;/code&gt; package from earlier which anyone with an Intel CPU should do.&lt;/p&gt;
&lt;p&gt;As for the options, I couldn&amp;rsquo;t say if you need, or don&amp;rsquo;t need, any of them but it&amp;rsquo;s worked fine for me so far. I&amp;rsquo;ll probably read up on them in depth shortly and update this post as required.&lt;/p&gt;
&lt;p&gt;Once that&amp;rsquo;s created, set it as the default configuration:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#8be9fd;font-style:italic&#34;&gt;echo&lt;/span&gt; &lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#34;default arch&amp;#34;&lt;/span&gt; &amp;gt; /boot/loader/loader.conf
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;and now you&amp;rsquo;re ready to reboot into a nicely working system!&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#8be9fd;font-style:italic&#34;&gt;exit&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;reboot
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;I&amp;rsquo;ve still got a lot to learn about Arch Linux but so far, the above setup has worked well for me.&lt;/p&gt;
&lt;p&gt;There&amp;rsquo;s still more that goes into a system but this is enough to get past the pesky initial setup which gave me hours upon hours of grief as a beginner, which I still am essentially.&lt;/p&gt;
</content>
    </item>
    
  </channel>
</rss>
